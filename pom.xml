<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.mutiny</groupId>
    <artifactId>mutiny-core</artifactId>
    <version>1.0.0</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.4.2.RELEASE</version>
    </parent>

    <properties>
        <java.version>1.8</java.version>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>

        <db.module.url>jdbc:postgresql://${db.host}:${db.port}/${db.module.database.name}</db.module.url>
        <db.module.database.name>mutiny</db.module.database.name>
        <db.module.userId>mutiny</db.module.userId>

        <db.root.url>jdbc:postgresql://${db.host}:${db.port}/postgres</db.root.url>
        <db.root.userId>postgres</db.root.userId>

        <init.database.skip>true</init.database.skip>
        <db.create_db_extra/>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>sockjs-client</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>stomp-websocket</artifactId>
            <version>2.3.3</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>3.3.7</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>3.1.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>

        <!-- db dependencies -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.3-1102-jdbc4</version>
        </dependency>
        <dependency>
            <groupId>org.flywaydb</groupId>
            <artifactId>flyway-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!-- creates database user and schema, no schema objects (tables, etc) -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <dependencies>
                    <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.1-901-1.jdbc4</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <driver>org.postgresql.Driver</driver>
                    <url>${db.root.url}</url>
                    <username>${db.root.userId}</username>
                    <password>${db.root.password}</password>
                    <enableFiltering>true</enableFiltering>
                    <autocommit>true</autocommit>
                    <orderFile>ascending</orderFile>
                </configuration>
                <executions>
                    <!-- need to connect with root user to create database and module user -->
                    <execution>
                        <id>init-db</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <sqlCommand>
                            DROP DATABASE IF EXISTS ${db.module.database.name};
                            DROP USER IF EXISTS ${db.module.userId};
                            CREATE USER ${db.module.userId} LOGIN PASSWORD '${db.module.password}' NOCREATEDB NOCREATEROLE NOREPLICATION VALID UNTIL
                            'infinity';
                            CREATE DATABASE ${db.module.database.name} WITH ENCODING='UTF8' ${db.create_db_extra} OWNER=${db.module.userId} CONNECTION
                            LIMIT=-1;
                        </sqlCommand>
                            <skip>${init.database.skip}</skip>
                        </configuration>
                        <inherited>false</inherited>
                    </execution>
                    <!-- need to connect with module user in order to create schema in module database -->
                    <execution>
                        <id>init-db-schema</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <url>${db.module.url}</url>
                            <username>${db.module.userId}</username>
                            <password>${db.module.password}</password>
                            <sqlCommand>
                            CREATE SCHEMA mutiny AUTHORIZATION ${db.module.userId};
                        </sqlCommand>
                            <skip>${init.database.skip}</skip>
                        </configuration>
                        <inherited>false</inherited>
                    </execution>
                </executions>
            </plugin>
            <!-- executes the sql scripts that create the database objects -->
            <plugin>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-maven-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <driver>org.postgresql.Driver</driver>
                    <url>${db.module.url}</url>
                    <user>${db.module.userId}</user>
                    <password>${db.module.password}</password>
                    <sqlMigrationSuffix>.Final.sql</sqlMigrationSuffix>
                    <encoding>UTF-8</encoding>
                    <table>DB_MIGRATION_HISTORY</table>
                    <outOfOrder>true</outOfOrder>
                    <schemas>
                        <schema>mutiny</schema>
                    </schemas>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.1-901-1.jdbc4</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>

</project>
